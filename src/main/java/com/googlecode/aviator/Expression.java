package com.googlecode.aviator;

import java.lang.reflect.Method;
import java.util.Collections;
import java.util.Map;

import com.googlecode.aviator.exception.ExpressionRuntimeException;


/**
 * Precompiled expression,encapsulate a java class generated by expression
 * string
 * 
 * @author dennis
 * 
 */
public class Expression {
    private final Class<?> clazz;
    private final Method runMethod;


    public Expression(Class<?> clazz) throws NoSuchMethodException, SecurityException {
        super();
        this.clazz = clazz;
        this.runMethod = this.clazz.getDeclaredMethod("run", Map.class);
    }


    /**
     * Execute expression with enviroment
     * 
     * @param env
     *            Binding variable enviroment
     * @return
     */
    public Object execute(Map<String, Object> env) {
        if (env == null) {
            env = Collections.emptyMap();
        }
        try {
            return this.runMethod.invoke(null, env);
        }
        catch (Throwable e) {
            throw new ExpressionRuntimeException("Execute expression error", e);
        }
    }


    /**
     * Get generated class
     * 
     * @return
     */
    public Class<?> getInnerClass() {
        return this.clazz;
    }
}
